
const seq.endian = BIG;
const seq.width = 40;

field seq.address_mux = 0:1;
field seq.op = 2:3;
field seq.condition = 4:6;
field seq.relative = 27:27;
field seq.address = 28:39;

const COND_EQ_ZERO = 1;

const control = 7;
field sxop = control+0:control+3;
field lb_select = control+4:control+5;
field p_count = control+6:control+8;

field cxm = control+9:control+9;
field orxm = control+10:control+10;
field qxp = control+11:control+11;
field exconst8 = control+12:control+12;
field e_count = control+13:control+14;
const E_COUNT_P1 = 1;
const E_COUNT_M1 = 2;

const ADDR_MUX_OPCODE = 1;

field _const8 = 32:39;

def main {
    cxm = 0, sxop = 15;
    cxm = 0, sxop = 14;
    loop {
        lb_select=1, cxm=1, orxm=1, p_count=1, sxop = 1;
        _const8 = 3, exconst8 = 1, sxop = 2;
        do {
            sxop = 3, e_count = E_COUNT_M1;
        } while not COND_EQ_ZERO;
        sxop = 4, call LI;
        sxop = 8, while not COND_EQ_ZERO {
            sxop = 9, e_count = E_COUNT_M1;
        }
        sxop = 10;
    }
}

def LI {
    cxm = 1, sxop = 5;
    sxop = 6;
    _const8 = 2, exconst8 = 1, cxm = 0, sxop = 7, return;
}

def HALT {
    loop {
        sxop = 3, cxm = 0;
    }
}

def Z_if {
    sxop = 0, if COND_EQ_ZERO {
        sxop = 1;
    }
    sxop = 2, return;
}

def Z_if_else {
    sxop = 0, if COND_EQ_ZERO {
        sxop = 1;
    } else {
        sxop = 2;
    }
    sxop = 3, return;
}

def Z_switch {
    sxop = 0, switch ADDR_MUX_OPCODE {
        0: { sxop = 1; }
        1: { sxop = 2; cxm = 1; }
        2: { sxop = 3; }
    }
    sxop = 99, return;
}